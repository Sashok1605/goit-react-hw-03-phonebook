{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","id","v4","findByName","contactName","props","contacts","some","findByNumber","contactNumber","handleSubmit","alert","preventDefault","onSubmit","reset","this","className","s","form","type","pattern","title","required","onChange","Component","ContactListItem","onDeletContact","contactListItem","contact","buttonDelete","onClick","ContactList","list","map","Filter","filter","App","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f2fc4d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__3r3GH\",\"contact\":\"ContactListItem_contact__1QLFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1qoyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__xZryC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__SECbd\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ id: v4(), [name]: value });\r\n  };\r\n\r\n  findByName = contactName => {\r\n    return this.props.contacts.some(({ name }) => name === contactName);\r\n  };\r\n\r\n  findByNumber = contactNumber => {\r\n    return this.props.contacts.some(({ number }) => number === contactNumber);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    if (this.findByName(name) && this.findByNumber(number)) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDeletContact }) => (\r\n  <li className={s.contactListItem}>\r\n    <p className={s.contact}>\r\n      {' '}\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      className={s.buttonDelete}\r\n      type=\"button\"\r\n      onClick={() => onDeletContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeletContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeletContact={onDeletContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  componentDidMount() {\r\n    const contact = JSON.parse(localStorage.getItem('contact'));\r\n    if (contact) {\r\n      this.setState({ contacts: contact });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contact', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  formSubmitHandler = ({ id, name, number }) => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { id, name, number }],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onChange={this.changeFilter}\r\n          onDeletContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}